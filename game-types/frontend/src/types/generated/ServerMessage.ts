// This file was generated by [ts-rs](https://github.com/Aleph-Alpha/ts-rs). Do not edit this file manually.
import type { GamePhase } from "../../../../bindings/GamePhase";
import type { GameState } from "../../../../bindings/GameState";
import type { GuessResult } from "../../../../bindings/GuessResult";
import type { PersonalGuess } from "../../../../bindings/PersonalGuess";
import type { Player } from "../../../../bindings/Player";
import type { User } from "../../../../bindings/User";

export type ServerMessage = { "AuthenticationSuccess": { user: User, } } | { "AuthenticationFailed": { reason: string, } } | { "QueueJoined": { position: number, } } | "QueueLeft" | { "MatchFound": { game_id: string, players: Array<Player>, } } | { "GameStateUpdate": { state: GameState, } } | { "CountdownStart": { seconds: number, } } | { "RoundResult": { winning_guess: GuessResult, your_guess: PersonalGuess | null, next_phase: GamePhase, } } | { "GameOver": { winner: Player, final_scores: Array<Player>, } } | "GameLeft" | { "PlayerDisconnected": { player_id: string, } } | { "PlayerReconnected": { player_id: string, } } | { "Error": { message: string, } };
